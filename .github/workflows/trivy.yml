###############################################################
# Copyright (c) 2024 BMW Group AG
# Copyright 2024 SAP SE or an SAP affiliate company and ssi-dim-middle-layer contributors.
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

# Depending on the location of your Docker container
# you need to change the path to the specific Docker registry.
#
name: "Trivy"

on:
  push:
    branches: [main]
  # pull_request:
  # The branches below must be a subset of the branches above
  # branches: [ main, master ]
  # paths-ignore:
  #   - "**/*.md"
  #   - "**/*.txt"
  schedule:
    # Once a day
    - cron: "0 0 * * *"
  workflow_dispatch:
  # Trigger manually

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_SERVICE: sap/ssi-dim-middle-layer_dim-service
  IMAGE_NAME_MIGRATIONS: sap/ssi-dim-middle-layer_dim-migrations
  IMAGE_NAME_WORKER: sap/ssi-dim-middle-layer_dim-processes-worker

jobs:
  analyze-config:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # v0.29.0
        with:
          scan-type: "config"
          hide-progress: false
          format: "sarif"
          output: "trivy-results1.sarif"
          vuln-type: "os,library"
          skip-dirs: "docs/"
          timeout: "3600s"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
        if: always()
        with:
          sarif_file: "trivy-results1.sarif"

  analyze-service:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # It's also possible to scan your private registry with Trivy's built-in image scan.
      # All you have to do is set ENV vars.
      # Docker Hub needs TRIVY_USERNAME and TRIVY_PASSWORD.
      # You don't need to set ENV vars when downloading from a public repository.
      # For public images, no ENV vars must be set.
      - name: Run Trivy vulnerability scanner
        if: always()
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # v0.29.0
        with:
          # Path to Docker image
          image-ref: "${{ env.REGISTRY}}/${{ env.IMAGE_NAME_SERVICE}}:main"
          format: "sarif"
          output: "trivy-results2.sarif"
          vuln-type: "os,library"

      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
        with:
          sarif_file: "trivy-results2.sarif"

  analyze-migrations:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # It's also possible to scan your private registry with Trivy's built-in image scan.
      # All you have to do is set ENV vars.
      # Docker Hub needs TRIVY_USERNAME and TRIVY_PASSWORD.
      # You don't need to set ENV vars when downloading from a public repository.
      # For public images, no ENV vars must be set.
      - name: Run Trivy vulnerability scanner
        if: always()
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # v0.29.0
        with:
          # Path to Docker image
          image-ref: "${{ env.REGISTRY}}/${{ env.IMAGE_NAME_MIGRATIONS}}:main"
          format: "sarif"
          output: "trivy-results3.sarif"
          vuln-type: "os,library"

      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
        with:
          sarif_file: "trivy-results3.sarif"
        
  analyze-processes-worker:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # It's also possible to scan your private registry with Trivy's built-in image scan.
      # All you have to do is set ENV vars.
      # Docker Hub needs TRIVY_USERNAME and TRIVY_PASSWORD.
      # You don't need to set ENV vars when downloading from a public repository.
      # For public images, no ENV vars must be set.
      - name: Run Trivy vulnerability scanner
        if: always()
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # v0.29.0
        with:
          # Path to Docker image
          image-ref: "${{ env.REGISTRY}}/${{ env.IMAGE_NAME_WORKER}}:main"
          format: "sarif"
          output: "trivy-results4.sarif"
          vuln-type: "os,library"

      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
        with:
          sarif_file: "trivy-results4.sarif"
        